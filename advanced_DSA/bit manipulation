Q1. Single Number

Problem Description
Given an array of integers A, every element appears twice except for one. Find that integer that occurs once.
NOTE: Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

Problem Constraints
1 <= |A| <= 2000000
0 <= A[i] <= INTMAX

Input Format
The first and only argument of input contains an integer array A.

Output Format
Return a single integer denoting the single element.

Example Input
Input 1:
A = [1, 2, 2, 3, 1]
Input 2:
A = [1, 2, 2]

Example Output
Output 1:
3
Output 2:
1

Example Explanation
Explanation 1:
3 occurs once.
Explanation 2:
1 occurs once.

Solution -

class Solution:
    # @param A : tuple of integers
    # @return an integer
    def singleNumber(self, A):
        ans = 0
        for i in A:
            ans = ans^i
        return ans

######################################################################################################################

Q2. Single Number II

Problem Description
Given an array of integers, every element appears thrice except for one, which occurs once.
Find that element that does not appear thrice.
NOTE: Your algorithm should have a linear runtime complexity.
Could you implement it without using extra memory?

Problem Constraints
2 <= A <= 5*106
0 <= A <= INTMAX

Input Format
First and only argument of input contains an integer array A.

Output Format
Return a single integer.

Example Input
Input 1:
A = [1, 2, 4, 3, 3, 2, 2, 3, 1, 1]
Input 2:
A = [0, 0, 0, 1]

Example Output
Output 1:
4
Output 2:
1

Example Explanation
Explanation 1:
4 occurs exactly once in Input 1.
1 occurs exactly once in Input 2.

Solution -

class Solution:
	# @param A : tuple of integers
	# @return an integer
	def singleNumber(self, A):
        Sum = [0]*32
        for num in A:
            pos = 0
            while num > 0:
                las_bi = num & 1
                Sum[pos] += las_bi
                pos += 1
                num = num >> 1
            ans,Pow = 0,1
            for i in range(len(Sum)):
                Sum[i] = Sum[i] % 3
                ans = ans + (Sum[i]*Pow)
                Pow = Pow<<1
        return ans

######################################################################################################################

Q3. Number of 1 Bits

Problem Description
Write a function that takes an integer and returns the number of 1 bits present in its binary representation.

Problem Constraints
1 <= A <= 109

Input Format
First and only argument contains integer A

Output Format
Return an integer

Example Input
Input 1:
11
Input 2:
6

Example Output
Output 1:
3
Output 2:
2

Example Explanation
Explaination 1:
11 is represented as 1011 in binary.
Explaination 2:
6 is represented as 110 in binary.

Solution -

class Solution:
    # @param A : integer
    # @return an integer
    def numSetBits(self, A):
        c = 0
        for i in range(32):
            if A&1 == 1:
                c += 1
            A = A>>1
        return c     

######################################################################################################################

Q4. Add Binary Strings

Problem Description
Given two binary strings A and B. Return their sum (also a binary string).

Problem Constraints
1 <= length of A <= 105
1 <= length of B <= 105
A and B are binary strings

Input Format
The two argument A and B are binary strings.

Output Format
Return a binary string denoting the sum of A and B

Example Input
Input 1:
A = "100"
B = "11"
Input 2:
A = "110"
B = "10"

Example Output
Output 1:
"111"
Output 2:
"1000"

Example Explanation
For Input 1:
The sum of 100 and 11 is 111.
For Input 2: 
The sum of 110 and 10 is 1000.

Solution -

class Solution:
    # @param A : string
    # @param B : string
    # @return a strings
    def addBinary(self, A, B):
        res = ""
        if len(A)>len(B):
            B = "0"*(len(A)-len(B)) + B
        if len(B) > len(A):
            A = "0"*(len(B)-len(A)) + A
        carry = 0
        Sum = 0
        for i in range(len(A)-1,-1,-1):
            Sum = int(A[i]) + int(B[i]) + carry
            if Sum > 1:
                Sum = Sum & 1
                carry = 1
            else:
                carry = 0
            res += str(Sum)
        res = res[::-1]
        if carry == 1:
            res = '1' + res
        return res

######################################################################################################################

Q5. Interesting Array

Problem Description
You have an array A with N elements. We have two types of operation available on this array :
We can split an element B into two elements, C and D, such that B = C + D.
We can merge two elements, P and Q, to one element, R, such that R = P ^ Q i.e., XOR of P and Q.
You have to determine whether it is possible to convert array A to size 1, containing a single element equal to 0 after several splits and/or merge?

Problem Constraints
1 <= N <= 100000
1 <= A[i] <= 106

Input Format
The first argument is an integer array A of size N.

Output Format
Return "Yes" if it is possible otherwise return "No".

Example Input
Input 1:
A = [9, 17]
Input 2:
A = [1]

Example Output
Output 1:
Yes
Output 2:
No

Example Explanation
Explanation 1:
Following is one possible sequence of operations -  
1) Merge i.e 9 XOR 17 = 24  
2) Split 24 into two parts each of size 12  
3) Merge i.e 12 XOR 12 = 0  
As there is only 1 element i.e 0. So it is possible.
Explanation 2:
There is no possible way to make it 0.

Solution -

class Solution:
    # @param A : list of integers
    # @return a strings
    def solve(self, A):
        v = 0
        for i in A:
            v = v^i
        v1 = 0
        v2 = 0
        for i in range(1,v):
            v1 = i
            v2 = v-i
            r = v1^v2
            if r == 0:
                return "Yes"
        return "No"

######################################################################################################################

Q6. Min XOR value

Problem Description
Given an integer array A of N integers, find the pair of integers in the array which have minimum XOR value. Report the minimum XOR value.

Problem Constraints
2 <= length of the array <= 100000
0 <= A[i] <= 109

Input Format
First and only argument of input contains an integer array A.

Output Format
Return a single integer denoting minimum xor value.

Example Input
Input 1:
A = [0, 2, 5, 7]
Input 2:
A = [0, 4, 7, 9]

Example Output
Output 1:
2
Output 2:
3

Example Explanation
Explanation 1:
0 xor 2 = 2

Solution -

class Solution:
	# @param A : list of integers
	# @return an integer
	def findMinXor(self, A):           
        ans = float('inf')
        n = len(A)
        A.sort()
        for i in range(0,n-1):
            ans = min(ans,A[i]^A[i+1])
        return ans
